<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile Dashboard</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css">
  <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js" defer></script>
  <script src="/javascripts/jquery-1.11.0.min.js" defer></script>
  <script src="/javascripts/script.js" defer></script>
  <script src="/javascripts/plugins.js" defer></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@100;200;300;400;500;600;700&display=swap"
  rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="../stylesheets/anh//bootstrap.css" />
  <link href="../stylesheets/anh/style.css" rel="stylesheet" />
  <link href="../stylesheets/anh/responsive.css" rel="stylesheet" />
  <link rel="shortcut icon" href="<%= favicon %>" type="image/x-icon">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- Bootstrap Bundle JS (includes Popper) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    
    @media (max-width:768px){
      .header-image,.home-login{
        display: none !important;
      }
      .mobile-search-bar{
        padding: 5px !important;
      }
    }
.preloader-wrapper .preloader {
    margin: 20% auto 0;
    transform: translateZ(0)
}
.preloader-wrapper {
    height: 100vh;
    margin: 0 auto;
    z-index: 111;
    background: #fff
}
.preloader-wrapper {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%
}
    :root {
      --primary: #0070f3;
      --primary-foreground: #ffffff;
      --secondary: #f5f5f5;
      --secondary-foreground: #111111;
      --background: #ffffff;
      --foreground: #111111;
      --card: #ffffff;
      --card-foreground: #111111;
      --border: #e5e5e5;
      --input: #ffffff;
      --ring: #0070f3;
    }
    

    body {
      
      --heading-font: 'Josefin Sans', sans-serif --bs-link-color: #333;
      --bs-font-sans-serif: 'Josefin Sans', sans-serif;
      --bs-body-font-family: var(--bs-font-sans-serif);
      background-color: var(--background);
      color: var(--foreground);
    }
    .container,
.container-fluid,
.container-lg,
.container-md,
.container-sm,
.container-xl,
.container-xxl {
    --bs-gutter-x: 2rem
}

    .card {
      background: var(--card);
      color: var(--card-foreground);
      border-color: var(--border);
      transition: all 0.3s ease;
    }

    .profile-img-wrapper {
      width: 150px;
      height: 150px;
      margin: 0 auto;
    }

    .profile-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border: 3px solid var(--border);
    }

    .order-card {
      padding: 1rem;
      border: 1px solid var(--border);
      border-radius: 0.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .order-card:hover {
      background-color: rgb(226, 221, 221);
      transform: translateY(-2px);
    }

    .product_image {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: 0.5rem;
    }

    .btn-primary {
      background-color: #6BB252;
      color: var(--primary-foreground);
      border: none;
    }

    .btn-primary:hover {
      background-color: var(--primary);
      filter: brightness(90%);
    }

    .modal-content {
      background: var(--background);
    }

    @media (max-width: 768px) {
      .profile-img-wrapper {
        width: 120px;
        height: 120px;
      }

      .product_image {
        width: 60px;
        height: 60px;
      }
    }

    .menu-button {
      display: flex;
      align-items: center;
      gap: 8px;
      background-color: transparent;
      border: none;
      cursor: pointer;
      padding: 10px;
      border-radius: 5px;
      transition: background-color 0.3s ease;
    }

    .menu-button:hover {
      background-color: #f0f0f0;
    }

    .menu-button img {
      border-radius: 50%;
      width: 40px;
      height: 40px;
      object-fit: cover;
    }

    .menu-button .title {
      font-size: 14px;
      font-weight: 500;
      color: #333;
    }

    div.modal-content {
  width: 800px !important;
  max-width: 700px !important;
}
.modal-dialog {
  display: flex;
  justify-content: center;
  align-items: center;
}

  </style>
</head>

<body>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"
  integrity="sha512-E8QSvWZ0eCLGk4km3hxSsNmGWbLtSCSUcewDQPQWZF6pEU8GlT8a5fF32wOl1i8ftdMhssTrF/OhyGWwonTcXA=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <%-include('modal_pop')%>
  <%-include('header')%>

  <!-- <header>
    <div class="container-fluid">
      <div class="row py-2 border-bottom mobile-header">

        <div
          class="col-sm-12 col-lg-1 col-md-3 text-center text-sm-start d-flex gap-3 justify-content-center justify-content-md-center header-image">
          <div class="d-flex align-items-center my-3 my-sm-0">
            <a href="/">
              <img src="/images/Rasyan_tm.webp" alt="logo" class="img-fluid" style="height: 80px;" loading="lazy">
            </a>
          </div>


        </div>

        <div class="col-sm-12  col-lg-5 col-md-9 p-3 mobile-search-bar">

        </div>

        <div class="col-sm-12 col-lg-6 col-md-12 d-flex gap-5 p-0 header-nav" style="font-size: larger;">
          <ul class="d-flex justify-content-evenly align-items-center list-unstyled m-0 w-100">
            <li class="home-nav">
              <a href="/" class="nav-links nav-link text-dark">Home</a>
            </li>
            <li class="home-about">
              <a href="/aboutus" class="nav-links nav-link text-dark">About Us</a>
            </li>

            <li class="home-blogs">
              <a href="/blogs" class="nav-links nav-link text-dark">Blogs</a>
            </li>
            <li class="home-login">

              <div class="menu-container" style="z-index: 200;">
                <button class="menu-button"><span class="title userloginn nav-link nav-links"><a
                      style="text-decoration: none;font-size: 1.2rem;" onclick="userLogin()">Login</a>
                  </span>
                </button>

                <p style="display: none;margin-top: -3px;font-size: 1rem;" class="userprofilee"><a href="/profile"
                    class="nav-links nav-link text-dark ">Hello </a>

                </p>
              </div>

            </li>
            <li class="home-cart">

              <div style="position: relative;cursor: pointer;" class="cart-modals">
                <button id="cart-push" style="border: none;" class="p-1 mx-1 nos-style" data-bs-target="#offcanvasCart"
                  aria-controls="offcanvasCart">
                  <div class="cartX"
                    style="position: absolute; top: -2px;right: 3px;display: flex;justify-content: center;align-items: center;background-color:#6BB252;color:black;width: 25px;height: 25px;border-radius: 50%;">
                  </div>
                  <i style="font-size: 26px;color: #e64361;" class="fa-solid fa-cart-shopping"></i>
                </button>
              </div>
            </li>
          </ul>
        </div>
        <div class="col-md-6 copyright d-flex align-items-center"
          style="position: fixed; bottom: 0;right: 0;width: 100%;background-color: #E1E7E0;z-index: 100000 !important;">
          <p style="margin: 0.5rem auto;padding: 0;text-align: center;" class="footer-section">Copyrights Â© 2024 CATV
            Digital |
            All Rights Reserved.</p>
          <img src="/images/CAtv.png" height="25px" width="50px" alt="CATV" loading="lazy">
        </div>

      </div>
    </div>
  </header> -->

  <div class="container py-5">
    <div class="row g-4">
      <div class="col-lg-4">
        <div class="card profile-card h-100">
          <div class="card-body text-center">
            <div class="profile-img-wrapper mb-4">
              <img src='<%= siteLogo %>' style="object-fit: contain;" alt="Profile"
                class="rounded-circle profile-img">
            </div>
            <h5 class="card-title mb-1 user_name"></h5>
            <p class="text-muted mb-3 customer_email"></p>
            <p style="display: none;" class="text-muted mb-3 customer_city"></p>
            <p style="display: none;" class="text-muted mb-3 customer_state"></p>
            <p style="display: none;" class="text-muted mb-3 customer_pincode"></p>
            <div class="contact-info mb-4">
              <p class="mb-1 customer_contact"></p>
              <p class="mb-1 customer_address"></p>
            </div>
            <div class="d-flex gap-2">
              <button id="profileButton" class="btn btn-primary w-50" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                Edit Profile
              </button>
              
              <button onclick="logout()" class="btn btn-danger w-50">LOGOUT</button>
            </div>
            
          </div>
        </div>
      </div>
      <div class="col-lg-8">
        <div class="card h-100">
          <div class="card-header">
            <h5 class="mb-0">Order History</h5>
          </div>
          <div class="card-body">
            <div id="orderContainer"></div> 
            <div id="paginationContainer" class="mt-3"></div>

          
          </div>

        </div>

      </div>

    </div>
  </div>

  <!-- Edit Profile Modal -->
  <div class="modal fade" id="editProfileModal" tabindex="-1" style="z-index: 10000;">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Profile</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form class="needs-validation" novalidate>
            
            <!-- First Row: Name & Email -->
            <div class="row">
              <div class="col-md-6 mb-3">
                <label class="form-label">Full Name</label>
                <input type="text" class="form-control" name="user_name" required>
              </div>
              <div class="col-md-6 mb-3">
                <label class="form-label">Email</label>
                <input type="email" class="form-control" name="user_email" required>
              </div>
            </div>
              <div class="row">
              <div class="col-md-6 mb-3">
                <label class="form-label">Phone Number</label>
                <input type="tel" class="form-control" name="user_contact" disabled required>
              </div>
              <div class="col-md-6 mb-3">
                <label class="form-label">City</label>
                <input type="text" class="form-control" name="user_city" required>
              </div>
            </div>
            <div class="row">
              <div class="col-md-6 mb-3">
                <label class="form-label">State</label>
                <select id="customer_state" name="customer_state"
                style="width: 100%;background-color: white;padding: 5px;"
                class="select" tabindex="3" required>
                <option value="" disabled selected>Select your State</option>
                <option value="">-- Select State --</option>
                <option value="maharashtra">Maharashtra</option>
              </select>
              </div>
              <div class="col-md-6 mb-3">
                <label class="form-label">Pincode</label>
                <input type="text" class="form-control" name="user_pincode" required>
              </div>
            </div>
              <div class="col-md-12">
                <label class="form-label">Address</label>
                <textarea type="text" rows="3" class="form-control" name="user_address" required ></textarea>
              </div>
             
  
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </div>
    </div>
  </div>
  

  <!-- Order Details Modal -->
  <div class="modal fade" id="orderDetailsModal" tabindex="-1" >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title order_id">#ORD-</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <div class="row g-4">
            <div class="col-md-6">
              <h6>Shipping Address</h6>
              <p class="address"></p>
              <h6>Billing Details</h6>
              <p class="payment_mode"></p>
            </div>
            <div class="col-md-6">
              <h6>Product Information</h6>
              <div class="d-flex align-items-center mb-3">
                <img src="" class="product_image me-3" alt="Product">
                <div>
                  <h6 class="mb-1 product_name"></h6>
                  <p class="mb-0 quantity">Quantity: </p>
                </div>
              </div>
              <h6>Payment Summary</h6>
              <div class="d-flex justify-content-between mb-2">
                <span>Price</span>
                <span class="price"></span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span>Discount Price</span>
                <span class="discount_price"></span>
              </div>
              <div class="d-flex justify-content-between fw-bold">
                <span>Total</span>
                <span class="total_price"></span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    var initPreloader = function() {
      $(document).ready(function($) {
      var Body = $('body');
          Body.addClass('preloader-site');
      });
      $(window).load(function() {
          $('.preloader-wrapper').fadeOut();
          $('body').removeClass('preloader-site');
      });
    }
 document.getElementById("cart-push").addEventListener("click", function () {
        window.location.href = "/cart"; // Redirects to /cart on click
    });


    const userform = document.getElementById("user-form");
    const user_profile_container = document.querySelector(".container");
    const user_form_container = document.querySelector(".user-form-container");
    
    document.addEventListener("DOMContentLoaded", () => {


      
      const userprofilee = document.querySelector(".userprofilee");
      const usersigninn = document.querySelector(".userloginn");
      const userDetail = localStorage.getItem("contactid");
      let userName = localStorage.getItem("name");


      if (userName) {
        userName = userName.split(" ")[0];
      }

      if (userDetail) {
        usersigninn.style.display = "none"
        userprofilee.style.display = "flex";
        if(window.innerWidth < 768 ){
          userprofilee.style.display = "none";

        }
        if (userName) {
          userprofilee.innerHTML = `<li><a href="/profile" class="k text-dark">
            Hello ${userName} 
        </a></li>`;
        }
      }
      else {
        userprofilee.style.display = "none";
        usersigninn.style.display = "flex"
      }

      // Open modal and populate fields
      document.querySelector("[data-bs-target='#editProfileModal']").addEventListener("click", () => {
    let user_name = document.querySelector(".user_name")?.innerText || localStorage.getItem("name") || "";
    const user_email = document.querySelector(".customer_email")?.innerText || "";
    const user_contact = document.querySelector(".customer_contact")?.innerText || "";
    const user_address = document.querySelector(".customer_address")?.innerText || "";
    const user_city = document.querySelector(".customer_city")?.innerText || "";
    const user_state = document.querySelector(".customer_state")?.innerText || "";
    const user_pincode = document.querySelector(".customer_pincode")?.innerText || "";

    user_name = user_name === "No Data Available" ? "" : user_name;

    document.querySelector("#editProfileModal input[name='user_name']").value = user_name;
    document.querySelector("#editProfileModal input[name='user_email']").value = user_email;
    document.querySelector("#editProfileModal input[name='user_contact']").value = user_contact;
    document.querySelector("#editProfileModal textarea[name='user_address']").value = user_address;
    document.querySelector("#editProfileModal input[name='user_city']").value = user_city;
    // document.querySelector("#editProfileModal input[name='user_state']").value = user_state;
    document.querySelector("#editProfileModal input[name='user_pincode']").value = user_pincode;
    const stateDropdown = document.querySelector("#editProfileModal select[name='customer_state']");
    if (stateDropdown) {
        stateDropdown.value = user_state.toLowerCase(); // Match case with option values
    }

    // Function to allow only numeric input
    function enforceNumericInput(selector) {
        const inputField = document.querySelector(selector);
        if (inputField) {
            inputField.addEventListener("input", function () {
                this.value = this.value.replace(/\D/g, ""); // Remove non-numeric characters
            });
        }
    }

    // Apply numeric restriction to pincode and contact fields
    enforceNumericInput("#editProfileModal input[name='user_pincode']");
    enforceNumericInput("#editProfileModal input[name='user_contact']");

    function enforceTextInput(selector) {
        const inputField = document.querySelector(selector);
        if (inputField) {
            inputField.addEventListener("input", function () {
              this.value = this.value.replace(/[^A-Za-z\s]/g, ""); // Remove numbers and special characters
            });
        }
    }
    enforceTextInput("#editProfileModal input[name='user_state']");
    enforceTextInput("#editProfileModal input[name='user_city']");

   
});


      // Handle form submission
      document.querySelector("#editProfileModal .btn-primary").addEventListener("click", () => {
        const user_name = document.querySelector("#editProfileModal input[name='user_name']").value;
        const user_email = document.querySelector("#editProfileModal input[name='user_email']").value;
        const user_contact = document.querySelector("#editProfileModal input[name='user_contact']").value;
        const user_address = document.querySelector("#editProfileModal textarea[name='user_address']").value;
        const user_city = document.querySelector("#editProfileModal input[name='user_city']").value;
        const user_state = document.querySelector("#editProfileModal select[name='customer_state']").value; // Fixed selector
        const user_pincode = document.querySelector("#editProfileModal input[name='user_pincode']").value;

        const requestData = {
          customer_name: user_name,
          customer_email: user_email,
          customer_contact: user_contact,
          customer_address: user_address,
          customer_city: user_city,
          customer_state: user_state,
          customer_pincode: user_pincode,
        };

        fetch("<%= url_pathname %>add-profile", {  // Replace with actual API endpoint
          method: "POST",  // Or "PUT" if updating an existing record
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(requestData),
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              document.querySelector(".user_name").innerText = user_name;
              document.querySelector(".customer_email").innerText = user_email;
              document.querySelector(".customer_contact").innerText = user_contact;
              document.querySelector(".customer_address").innerText = user_address;
              document.querySelector(".customer_city").innerText = user_city;
              document.querySelector(".customer_state").innerText = user_state;
              document.querySelector(".customer_pincode").innerText = user_pincode;

              localStorage.setItem("name", user_name);
              localStorage.setItem("contactid", user_contact);
              showPopup("Success", data.message, "Success");

              setTimeout(() => {
                window.location.reload();
              }, 1500);
            } else {
              showPopup("Error", data.message, "Failure");

            }
          })
          .catch(error => {
            console.error("Error updating profile:", error);
            alert("An error occurred. Please try again.");
          });
      });
    });

   



    const contactId = localStorage.getItem("contactid");
    if (contactId) {
  const phone = String(localStorage.getItem("contactid"));

  fetch("<%=url_pathname %>user_contact_form", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({ phone }),
  })
    .then((res) => {
      if (!res.ok) {
        throw new Error(`HTTP error! status: ${res.status}`);
      }
      return res.json();
    })
    .then((data) => {
      console.log("Fetched Data:", data);

      if (data?.data) {
        document.querySelector(".user_name").innerText = data.data.customer_name;
        document.querySelector(".customer_email").innerText = data.data.customer_email || "";
        document.querySelector(".customer_contact").innerText = data.data.customer_contact || "";
        document.querySelector(".customer_address").innerText = data.data.customer_address || "";
        document.querySelector(".customer_city").innerText = data.data.customer_city || "";
        document.querySelector(".customer_state").innerText = data.data.customer_state || "";
        document.querySelector(".customer_pincode").innerText = data.data.customer_pincode || "";
        updateProfileButton(data.data);
        console.log("data",data);

        const orderContainer = document.getElementById("orderContainer");
        const paginationContainer = document.getElementById("paginationContainer");

        let orders = data.oder_details || []; 
        let currentPage = 1;
        let ordersPerPage = 3;

        function formatProductName(name) {
          return name.replace(/(.{25})/g, "$1<br>"); // Break every 20 characters
        }
        function formatOrderTime(dateString) {
  const date = new Date(dateString);
  return `Ordered on ${date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}`;
}

function renderOrders(page) {
  orderContainer.innerHTML = ""; // Clear previous orders
  let startIndex = (page - 1) * ordersPerPage;
  let endIndex = startIndex + ordersPerPage;
  console.log("orders",orders);
  
  let paginatedOrders = orders.slice(startIndex, endIndex);

  console.log("paginatedOrders",paginatedOrders)
  if (paginatedOrders.length > 0) {
    paginatedOrders.forEach(order => {
      // Create a new div element for order card
      const orderCard = document.createElement("div");
      orderCard.classList.add("order-card", "mb-3");
      orderCard.setAttribute("data-bs-toggle", "modal");
      orderCard.setAttribute("data-bs-target", "#orderDetailsModal");

      // Store order data in dataset
      orderCard.dataset.order = JSON.stringify(order);

      // Set inner HTML for the order card
      orderCard.innerHTML = `
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h6 class="mb-1 payment_order_id">#ORD-${order.id}</h6>
            <p class="mb-1 product_detail">${formatProductName(order.product_name)}</p>
            <small class="text-muted order_date">${formatOrderTime(order.order_time)}</small>
          </div>
          <div class="text-end">
            <h6 class="mb-1 product_price">â¹ ${order.total_price}</h6>
            <span class="badge ${order.order_status === 'SUCCESS' ? 'bg-success' : order.order_status === 'FAILED' ? 'bg-danger' : 'bg-warning'} order_status">${order.order_status}</span>
          </div>
        </div>
      `;

      // Attach click event listener to open modal with order details
      orderCard.addEventListener("click", () => populateModal(order));

      // Append order card to container
      orderContainer.appendChild(orderCard);
    });
  } else {
    console.log("HIT")
    orderContainer.innerHTML = `
     <div class="text-center">
        <h5 class="mt-4 text-muted">No orders History available</h5>
      </div>
    `;

  }
}




        function renderPagination() {
          paginationContainer.innerHTML = ""; // Clear previous pagination
          let totalPages = Math.ceil(orders.length / ordersPerPage);
          console.log("totalPages",totalPages)

          if (totalPages > 1) {
            let paginationHTML = `
              <nav aria-label="Orders pagination">
                <ul class="pagination justify-content-end mb-0">
                  <li class="page-item ${currentPage === 1 ? "disabled" : ""}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Previous</a>
                  </li>`;

            for (let i = 1; i <= 5; i++) {
              paginationHTML += `
                  <li class="page-item ${i === currentPage ? "active" : ""}">
                <a class="page-link" href="#" onclick="changePage(${i}, event)">${i}</a>
                  </li>`;
            }

            paginationHTML += `
                  <li class="page-item ${currentPage === totalPages ? "disabled" : ""}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Next</a>
                  </li>
                </ul>
              </nav>`;

            paginationContainer.innerHTML = paginationHTML;
          }
        }
        function populateModal(order) {
    document.querySelector(".order_id").innerText = `#ORD-${order.id}`;
    document.querySelector(".address").innerText = order.address || "No address available";
    document.querySelector(".payment_mode").innerText = order.payment_mode || "No payment mode";
    document.querySelector(".product_image").src = order.product_image || "default.jpg";
    document.querySelector(".product_name").innerText = order.product_name;
    document.querySelector(".quantity").innerText = `Quantity: ${order.quantity}`;
    document.querySelector(".price").innerText = `â¹${order.price}`;
    document.querySelector(".discount_price").innerText = `â¹${order.price}`;
    document.querySelector(".total_price").innerText = `â¹${order.total_price}`;
  }

        window.changePage = function (page,event) {
          if (event) event.preventDefault(); // Prevents the page from jumping

          if (page >= 1 && page <= Math.ceil(orders.length / ordersPerPage)) {
            currentPage = page;
            renderOrders(currentPage);
            renderPagination();
          }
  // Restore the scroll position
        };

        renderOrders(currentPage);
        renderPagination();
      } else {
        document.querySelector(".user_name").innerText = "No Data Available";
        document.querySelector(".customer_contact").innerText = phone;
        orderContainer.innerHTML = `
      <div class="text-center">
        <h5 class="mt-4 text-muted">No orders History available</h5>
      </div>
    `;
    updateProfileButton(null);

        }
    })
    .catch(error => console.error("Error fetching order details:", error));
}

function updateProfileButton(userData) {
  console.log("HIY",userData)
  const profileButton = document.querySelector("#profileButton"); 

  if (profileButton) {
    if (userData && userData.customer_name && userData.customer_address) {
      profileButton.textContent = "Edit Profile";
    } else {
      profileButton.textContent = "Sign Up";
    }
  }
}
    const logout = () => {
      localStorage.removeItem("contact");
      localStorage.removeItem("contactid");
      localStorage.removeItem("name");
      window.location.href = "/";
    }

    const updateProfile = () => {
      user_form_container.style.display = "block";
      user_profile_container.style.display = "none"
    }
 
    const secretKey = 'your-unique-secret-key';
  const existingCart = localStorage.getItem("carts");
  let carts = [];
  if (existingCart) {
    try {
      carts = decryptData(existingCart);
    } catch (error) {
      console.error("Error decrypting cart data:", error);
      carts = [];
    }
  }
  function decryptData(encryptedData) {
    const bytes = CryptoJS.AES.decrypt(encryptedData, secretKey);
    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));
  }


    const len_cart = carts.reduce((sum, item) => sum + item.quantity, 0);
    const cartCount = document.querySelector(".cartX");
    cartCount.innerText = len_cart;
  </script>

</body>

</html>