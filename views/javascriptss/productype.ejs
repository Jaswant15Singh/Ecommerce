<script>
    document.getElementById("product-type-form").addEventListener("submit", async (e) => {
        e.preventDefault();
        const label_name = document.querySelector("#label_name").value;
        const batch_quantity = document.querySelector("#batch_quantity").value;
        const quantity = document.querySelector("#quantity").value;
        const id = document.getElementById("product-id").value;
        try {
            const response = await fetch("<%= url_pathname %>admin/create_product_type", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ label_name, batch_quantity,quantity })
            });

            const data = await response.json();

            if (response.ok) {
                if (data.success) {
                    showPopup("Success", data.message, "Success");
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                }
                else {
                    showPopup("Error", data.message, "Failed");
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                }
            } else {
                showPopup("Error", "server error", "Failed");

                console.error("Error:", data.message);
            }
        } catch (error) {
            console.error("Request error:", error);
        }
    })


    // createProductType();
    const menuBar = document.querySelector('#content nav .bx.bx-menu');
    const sidebar = document.getElementById('sidebar');
    if (window.innerWidth < 769) {
        sidebar.classList.add('hide');
    }
    menuBar.addEventListener('click', function () {
        sidebar.classList.toggle('hide');
    })


    document.addEventListener("DOMContentLoaded", function () {
        const productModal = document.getElementById("exampleModal");

        productModal.addEventListener("hidden.bs.modal", function () {
            const sideMenu = document.querySelector("#sidebar");

            if (sideMenu) {
                sideMenu.style.display = "block";
            } else {
                console.error("Sidebar not found");
            }
        });
    });

    // function closeMenu() {
    // 	const sideMenu = document.querySelector("#sidebar");

    // 	sideMenu.style.display = "none";
    // }

    function setTypeProducts() {
       const sideMenu = document.querySelector("#sidebar");
    	sideMenu.style.display = "none";
        const product_type_name = document.getElementById("label_name").value = "";
        const product_type_subname = document.getElementById("batch_quantity").value = "";
    }



const openUpdateModal=(id,label_name,batch_quantity,quantity)=>{
console.log(id,label_name,batch_quantity,quantity);
document.getElementById("product-id").value = id;
document.getElementById("label_name").value = label_name;
document.getElementById("batch_quantity").value = batch_quantity;
document.getElementById("quantity").value = quantity;
}

let categoryData = [];
let filteredCategoryData = [];
let categoryPage = 1;
const rowsPerCategoryPage = 5;

document.addEventListener("DOMContentLoaded", function () {
    const paginationContainer = document.getElementById("pagination");
   

    fetchCategoryData();

    function fetchCategoryData() {
        fetch('<%= (url_pathname) %>admin/get_product_type')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log(data);

                if (data && data.data) {
                    categoryData = data.data;
                    filteredCategoryData = categoryData;
                    displayBlogsPage(categoryPage);
                    setupBlogsPagination(filteredCategoryData.length);
                } else {
                    console.error("No category data received.");
                }
            })
            .catch(error => {
                console.error('Error fetching category data:', error);
            });
    }


    function displayBlogsPage(page) {
        const tableBody = document.querySelector('#productype tbody');
        tableBody.innerHTML = '';

        const start = (page - 1) * rowsPerCategoryPage;
        const end = start + rowsPerCategoryPage;
        const paginatedCategoryData = filteredCategoryData.slice(start, end);
        console.log("page",paginatedCategoryData);

        if (paginatedCategoryData.length === 0) {
            tableBody.innerHTML = '<tr><td colspan="12">No data available</td></tr>';
            return;
        }
        paginatedCategoryData.forEach((img, index) => {
            
            const rowNumber = start + index + 1;
            const rowHTML = `
                <tr>
                    <td>${rowNumber}</td>
                  <td>${img.quantity}</td>
                    <td>${img.label_name}</td>
                    <td>${img.batch_quantity}</td>
                    <td>${new Date(img.inserted_date).toLocaleDateString()}</td>
                    <td>
                      <button 
                          type="button" 
                          class="btn btn-primary" 
                          data-bs-toggle="modal" 
                          data-bs-target="#exampleModal" 
                          onclick="openUpdateModal('${img.id}', '${img.label_name}','${img.batch_quantity}','${img.quantity}')"
                          >Update
                      </button>
                    </td>
                </tr>
            `;
            tableBody.insertAdjacentHTML('beforeend', rowHTML);
        });
    }

    function setupBlogsPagination(totalItems) {
        const paginationDiv = document.querySelector('#pagination');
        paginationDiv.innerHTML = '';

        const totalPages = Math.ceil(totalItems / rowsPerCategoryPage);
        const maxButtons = 5;
        const halfMaxButtons = Math.floor(maxButtons / 2);

        let startPage, endPage;

        if (totalPages <= maxButtons) {
            startPage = 1;
            endPage = totalPages;
        } else {
            if (categoryPage <= halfMaxButtons) {
                startPage = 1;
                endPage = maxButtons;
            } else if (categoryPage + halfMaxButtons >= totalPages) {
                startPage = totalPages - maxButtons + 1;
                endPage = totalPages;
            } else {
                startPage = categoryPage - halfMaxButtons;
                endPage = categoryPage + halfMaxButtons;
            }
        }

        if (categoryPage > 1) {
            const prevButton = document.createElement('button');
            prevButton.textContent = 'Previous';
            prevButton.className = 'pagination-btn';
            prevButton.addEventListener('click', () => {
                categoryPage--;
                displayBlogsPage(categoryPage);
                setupBlogsPagination(totalItems);
            });
            paginationDiv.appendChild(prevButton);
        }

        for (let i = startPage; i <= endPage; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.className = 'pagination-btn';
            if (i === categoryPage) {
                button.classList.add('active');
            }

            button.addEventListener('click', () => {
                categoryPage = i;
                displayBlogsPage(categoryPage);
                setupBlogsPagination(totalItems);
            });

            paginationDiv.appendChild(button);
        }

        if (categoryPage < totalPages) {
            const nextButton = document.createElement('button');
            nextButton.textContent = 'Next';
            nextButton.className = 'pagination-btn';
            nextButton.addEventListener('click', () => {
                categoryPage++;
                displayBlogsPage(categoryPage);
                setupBlogsPagination(totalItems);
            });
            paginationDiv.appendChild(nextButton);
        }
    }
});
</script>