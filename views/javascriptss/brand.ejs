<script>

    document.getElementById("blog-form").addEventListener("submit", function (event) {
        event.preventDefault();
        const brand_name=document.getElementById("brand_name").value;        
        const id = document.querySelector("#brand-id").value;
        
        const formData=new FormData(this);
        if (document.getElementById('visibility').checked) {
            formData.set('visibility', true);
        } else {
            formData.set('visibility', false);
        }
        for(const [key,value] of formData.entries()){
        }        
        const url = id
            ? `<%= (url_pathname) %>admin/update_brand/${id}`
            : "<%= (url_pathname) %>admin/create_brand";
        const method = id ? "PUT" : "POST";
        body=formData
         
        fetch(url, {
            method: method,
            body:body,
        })
            .then((response) => response.json())
            .then((data) => {
                this.reset();
                closeMenu();
                if (data.success) {
                    showPopup("Success", data.message, "Success");
                    resetForm();

                    setTimeout(() => {
                        window.location.reload();

                    }, 1000)
                }

                else if (data.message === "Missing fields") {
                    showPopup("Error", 'Missing Fields', "Failed")

                }
                else {
                    showPopup("Error", 'Some issue occurred', "Failed")

                }
                setTimeout(() => {
                    window.location.reload();
                }, 1500)
            })
            .catch((error) => {
                console.error("Error:", error.message);
            });
    });

    function resetForm() {
        document.querySelector("#brand_name").value = '';
        document.querySelector("#brand_name").src = '';
        const imagePreview = document.querySelector("#brand-image-preview");
        imagePreview.style.display = "none";

    }

    function setBrands() {
        document.querySelector(".form-label").innerText = "Brand Name";
        resetForm();
        document.querySelector("#brand-id").value = '';
        document.getElementById("brand_image").style.display="block";
        const imagePreview = document.querySelector("#brand-image-preview");
        const fileInput = document.querySelector("#brand_image");
        const uploadButton = document.querySelector("#upload-button");
        const cancelButton = document.querySelector("#cancel-upload");
        document.getElementById("exampleModalLabel").innerText='Add Brand'
        document.querySelector(".brand-add").innerText="Add Brand"
        imagePreview.style.display="none";
        fileInput.style.display="block";
        uploadButton.style.display="none";
        cancelButton.style.display="none";
        document.getElementById("visibility").checked=false;
        closeMenu();
    }


    function openUpdateModal(id,isChecked) {
        const imagePreview = document.querySelector("#brand-image-preview");    
        const uploadButton = document.querySelector("#upload-button");
        const cancelButton = document.querySelector("#cancel-upload");
        document.getElementById("visibility").checked = isChecked === 'true';

        cancelButton.style.display = "none";
        const fileInput=document.getElementById("brand_image");
        fileInput.style.display="none"
        function getBrands() {
            fetch(`<%= url_pathname %>admin/ind_brand/${id}`)
                .then((res) => { return res.json() })
                .then((data) => {
                    document.querySelector(".form-label").innerText = "Update Brand";
                    document.getElementById("exampleModalLabel").innerText='Update Brand';
                    document.querySelector(".brand-add").innerText="Update Brand"
                    document.querySelector("#brand_name").value = data.data.brand_name;
                    document.querySelector("#brand-id").value = data.data.id;
                    imagePreview.src = `<%= (url_pathname) %>${data.data.brand_image}`;
                    imagePreview.style.display = "block";
                    uploadButton.style.display="inline-block";
                })
                uploadButton.addEventListener("click", () => {
                    imagePreview.style.display = "none";
                    fileInput.style.display = "block";
                    cancelButton.style.display = "inline-block";
                    uploadButton.style.display = "none";
                    });

                    fileInput.addEventListener("change", () => {
                        const file = fileInput.files[0];
                        if (file) {
                            const reader = new FileReader();
                            reader.onload = () => {
                            imagePreview.src = reader.result;
                            imagePreview.style.display = "block";
                            fileInput.style.display = "none";
                        uploadButton.style.display = "none";
                        cancelButton.style.display = "none";
                            };
                            reader.readAsDataURL(file);
                        }
                        });

                    cancelButton.addEventListener("click", () => {
                    imagePreview.style.display = "block";
                    fileInput.style.display = "none";
                    uploadButton.style.display = "inline-block";
                    cancelButton.style.display = "none";
                    });
                 }
                 getBrands()


            closeMenu();

    }
    function closeMenu() {
        const sideMenu = document.querySelector("#sidebar");
        sideMenu.style.display = "none";
    }

    document.querySelectorAll('input[type="number"]').forEach(function (input) {
        input.addEventListener('wheel', function (event) {
            event.preventDefault();
        });
    });


    const menuBar = document.querySelector('#content nav .bx.bx-menu');
    const sidebar = document.getElementById('sidebar');
    if (window.innerWidth < 769) {
        sidebar.classList.add('hide');
    }
    menuBar.addEventListener('click', function () {
        sidebar.classList.toggle('hide');
    });

    document.addEventListener("DOMContentLoaded", function () {
        const productModal = document.getElementById("exampleModal");

        productModal.addEventListener("hidden.bs.modal", function () {
            const sideMenu = document.querySelector("#sidebar");

            if (sideMenu) {
                sideMenu.style.display = "block";
            } else {
                console.log("Sidebar not found");
            }
        });
    });

    let categoryData = [];
    let filteredCategoryData = [];
    let categoryPage = 1;
    const rowsPerCategoryPage = 5;

    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const paginationContainer = document.getElementById("pagination");
        const startDateInput = document.getElementById("startDate");
        const endDateInput = document.getElementById("endDate");
        const filterButton = document.getElementById("filterButton");

        const today = new Date();
        const year = today.getFullYear();
        const month = String(today.getMonth() + 1).padStart(2, '0');
        const day = String(today.getDate()).padStart(2, '0');
        const maxDate = `${year}-${month}-${day}`;
        const formattedDate = `${year}-${month}-${day}`;

        startDateInput.value = formattedDate;
        endDateInput.value = formattedDate;
        startDateInput.setAttribute("max", maxDate);
        endDateInput.setAttribute("max", maxDate);

        searchInput.addEventListener("input", function () {

            const searchQuery = searchInput.value.trim();

            if (searchQuery.length > 0) {
                searchCategories(searchQuery);
            } else {
                fetchCategoryData();
            }
        });

        filterButton.addEventListener("click", function () {
            const startDateValue = startDateInput.value.trim();
            const endDateValue = endDateInput.value.trim();
            if (!startDateValue || !endDateValue) {
                showPopup("OOPS", "Please select both start and end dates.", "FAILURE");
                return;
            }

            const startDate = new Date(startDateValue);
            const endDate = new Date(endDateValue);

            if (isNaN(startDate) || isNaN(endDate)) {
                showPopup("OOPS", "Please select valid start and end dates.", "FAILURE");
                return;
            }

            if (startDate > endDate) {
                showPopup("OOPS", "Start date cannot be later than end date.", "FAILURE");
                return;
            }

            filteredCategoryData = categoryData.filter(category => {
                let categoryDate = new Date(category.inserted_date).toISOString().split('T')[0];
                let formattedStartDate = startDate.toISOString().split('T')[0];
                let formattedEndDate = endDate.toISOString().split('T')[0];

                return categoryDate >= formattedStartDate && categoryDate <= formattedEndDate;

            });

            if (filteredCategoryData.length === 0) {
                showPopup("No Data", "No brands found for the selected time period.", "INFO");
                displayBlogsPage(categoryPage);
                setupBlogsPagination(filteredCategoryData.length);
            } else {
                categoryPage = 1;
                displayBlogsPage(categoryPage);
                setupBlogsPagination(filteredCategoryData.length);
            }
        });

        fetchCategoryData();

        function fetchCategoryData() {
            fetch('<%= (url_pathname) %>admin/get/brands/Admin')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // console.log(data);

                    if (data && data.data) {
                        categoryData = data.data;
                        filteredCategoryData = categoryData;
                        displayBlogsPage(categoryPage);
                        setupBlogsPagination(filteredCategoryData.length);
                    } else {
                        console.error("No category data received.");
                    }
                })
                .catch(error => {
                    console.error('Error fetching category data:', error);
                });
        }

        function searchCategories(searchQuery) {
            fetch(`/Admin/search-brands?search=${encodeURIComponent(searchQuery)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch search results');
                    }
                    return response.json();
                })
                .then(data => {                    
                    if (data && data.length > 0) {
                        filteredCategoryData = data;
                        categoryPage = 1;
                        displayBlogsPage(categoryPage);
                        setupBlogsPagination(filteredCategoryData.length);
                    } else {
                        filteredCategoryData = [];
                        displayBlogsPage(categoryPage);
                        setupBlogsPagination(filteredCategoryData.length);
                    }
                })
                .catch(error => {
                    console.error("Error fetching search results:", error);
                });
        }

        function displayBlogsPage(page) {
            const tableBody = document.querySelector('#categoryTable tbody');
            tableBody.innerHTML = '';

            const start = (page - 1) * rowsPerCategoryPage;
            const end = start + rowsPerCategoryPage;
            const paginatedCategoryData = filteredCategoryData.slice(start, end);
            if (paginatedCategoryData.length === 0) {
                tableBody.innerHTML = '<tr><td colspan="12">No data available</td></tr>';
                return;
            }
            paginatedCategoryData.forEach((brand, index) => {
                const rowNumber = start + index + 1;
                const visibility=brand.visibility?"Visible":"Hidden"
                const rowHTML = `
                <tr>
                    <td>${rowNumber}</td>
                    <td>${brand.brand_name}</td>
                    <td><img src='<%= url_pathname %>${brand.brand_image}' style="width:70px;height:70px;"/></td>
                    <td>${visibility}</td>
                    <td>${new Date(brand.inserted_date).toLocaleDateString()}</td>
                    <td>
                      <button 
                          type="button" 
                          class="btn btn-primary" 
                          data-bs-toggle="modal" 
                          data-bs-target="#exampleModal" 
                          onclick="openUpdateModal('${brand.id}','${brand.visibility}')"
                          >Update
                      </button>
                    </td>
                </tr>
            `;
                tableBody.insertAdjacentHTML('beforeend', rowHTML);
            });
        }

        function setupBlogsPagination(totalItems) {
            const paginationDiv = document.querySelector('#pagination');
            paginationDiv.innerHTML = '';

            const totalPages = Math.ceil(totalItems / rowsPerCategoryPage);
            const maxButtons = 5;
            const halfMaxButtons = Math.floor(maxButtons / 2);

            let startPage, endPage;

            if (totalPages <= maxButtons) {
                startPage = 1;
                endPage = totalPages;
            } else {
                if (categoryPage <= halfMaxButtons) {
                    startPage = 1;
                    endPage = maxButtons;
                } else if (categoryPage + halfMaxButtons >= totalPages) {
                    startPage = totalPages - maxButtons + 1;
                    endPage = totalPages;
                } else {
                    startPage = categoryPage - halfMaxButtons;
                    endPage = categoryPage + halfMaxButtons;
                }
            }

            if (categoryPage > 1) {
                const prevButton = document.createElement('button');
                prevButton.textContent = 'Previous';
                prevButton.className = 'pagination-btn';
                prevButton.addEventListener('click', () => {
                    categoryPage--;
                    displayBlogsPage(categoryPage);
                    setupBlogsPagination(totalItems);
                });
                paginationDiv.appendChild(prevButton);
            }

            for (let i = startPage; i <= endPage; i++) {
                const button = document.createElement('button');
                button.textContent = i;
                button.className = 'pagination-btn';
                if (i === categoryPage) {
                    button.classList.add('active');
                }

                button.addEventListener('click', () => {
                    categoryPage = i;
                    displayBlogsPage(categoryPage);
                    setupBlogsPagination(totalItems);
                });

                paginationDiv.appendChild(button);
            }

            if (categoryPage < totalPages) {
                const nextButton = document.createElement('button');
                nextButton.textContent = 'Next';
                nextButton.className = 'pagination-btn';
                nextButton.addEventListener('click', () => {
                    categoryPage++;
                    displayBlogsPage(categoryPage);
                    setupBlogsPagination(totalItems);
                });
                paginationDiv.appendChild(nextButton);
            }
        }
    });
    
</script>